# -*- coding: utf-8 -*-
from telegram.ext import (Updater, CommandHandler, MessageHandler, RegexHandler)
from telegram import (ReplyKeyboardMarkup, ReplyKeyboardRemove)
import pymysql.cursors, time, datetime, json, requests

#####–ü–∞—Ä–∞–º–µ—Ç—Ä—ã MySQL######
HOST = "HOST"            #
USER = "USER"            #
PASSWORD = "PASSWORD"    #
DB = "DB"                #
##########################

BeautifulNumbers = {
	"1": "1Ô∏è‚É£",
	"2": "2Ô∏è‚É£",
	"3": "3Ô∏è‚É£",
	"4": "4Ô∏è‚É£",
	"5": "5Ô∏è‚É£",
}

#–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–≤–∞—Ä—è –∞–¥–º–∏–Ω–æ–≤
def CheckAdmin(d, value):
    for i in range(len(d)):
    	if int((d[i]["AdminVK"])) == value:
            return True
    return False

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –æ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –ë–î
def MySQLFetchOne(SQLString):
	
	connection = pymysql.connect(host=HOST,user=USER,password=PASSWORD,db=DB,cursorclass=pymysql.cursors.DictCursor)

	try:

	    with connection.cursor() as cursor:
	        cursor.execute(SQLString)
	        result = cursor.fetchone()
	finally:
	    connection.close()
	return result;

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ –≤—Å–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –ë–î
def MySQLFetchAll(SQLString):
	
	connection = pymysql.connect(host=HOST,user=USER,password=PASSWORD,db=DB,cursorclass=pymysql.cursors.DictCursor)
	try:
	    with connection.cursor() as cursor:
	        cursor.execute(SQLString)
	        result = cursor.fetchall()
	finally:
	    connection.close()
	return result;


#–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TGUpdater = Updater(token=MySQLFetchOne("SELECT ServiceKey FROM ServiceTable WHERE ServiceName='TelegramAPIKey'")["ServiceKey"])
TGAdmins = (MySQLFetchAll("SELECT AdminTG FROM TGAdmins"))

SMSLogin = MySQLFetchOne("SELECT ServiceKey FROM ServiceTable WHERE ServiceName='SMSAeroLogin'")["ServiceKey"]
SMSAPIKey = MySQLFetchOne("SELECT ServiceKey FROM ServiceTable WHERE ServiceName='SMSAeroAPIKey'")["ServiceKey"]
SMSAuth = SMSLogin+":"+SMSAPIKey
all_url = "https://"+SMSAuth+"@gate.smsaero.ru/v2"

GENDER, PHOTO, LOCATION, BIO = range(4)
#–ü—Ä–æ—Ü–µ–¥—É—Ä—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
def StartHandler(bot, update):
	bot.send_message(chat_id=update.message.chat_id, text="–ü—Ä–∏–≤–µ—Ç, —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:\n/sms - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è\n/balance - –ø–æ–ª—É—á–∞–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞\n/history - 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–º—Å\n/users - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")

def SMSHandler(bot, update):
	reply_keyboard = [["–î–∞", "–ù–µ—Ç"]]
	try:
		SMSNumber = update.message.text.split(" ")[1]
		SMSMessage = update.message.text.split("\"")[1]
		bot.send_message(chat_id=update.message.chat_id, text="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ \""+SMSMessage+"\" –Ω–∞ –Ω–æ–º–µ—Ä "+SMSNumber+"?",reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True))
	except:
		bot.send_message(chat_id=update.message.chat_id, text="–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:\n/sms –Ω–æ–º–µ—Ä_—Ç–µ–ª–µ—Ñ–æ–Ω–∞ \"–°–æ–æ–±—â–µ–Ω–∏–µ\"",reply_markup=ReplyKeyboardRemove())

def AcceptHandler(bot, update):
	sms = requests.get(all_url+"/sms/send?number="+SMSNumber+"&text="+SMSMessage+"&sign=SMS Aero&channel=DIRECT").json()
	if sms["success"]==True:
		SMSBalance = str(requests.get(all_url+"/balance").json()["data"]["balance"])
		bot.send_message(chat_id=update.message.chat_id, text="–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: "+SMSBalance+"‚ÇΩ")
	else:
		bot.send_message(chat_id=update.message.chat_id, text="–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è üòî\n–ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /sms")
	SMSNumber = None;
	SMSMessage = None;

def BalanceHandler(bot, update):
	balance = str(requests.get(all_url+"/balance").json()["data"]["balance"])
	bot.send_message(chat_id=update.message.chat_id, text="–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: "+balance+"‚ÇΩ")

def HistroyHandler(bot,update):
	history = requests.get(all_url+"/sms/list").json()["data"]
	OutMessage = ""
	for i in range(5):
		OutMessage += BeautifulNumbers[str(i+1)]+" +"+str(history[str(i)]["number"])+" \""+history[str(i)]["text"]+"\"\n\n"			
	bot.send_message(chat_id=update.message.chat_id, text="–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:\n"+OutMessage)

def MainUsersHandler(bot,update):
	UsersKeyboard = [["–î–æ–±–∞–≤–ª–µ–Ω–∏–µ", "–£–¥–∞–ª–µ–Ω–∏–µ"]]
	bot.send_message(chat_id=update.message.chat_id, text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n–ö–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å?",reply_markup=ReplyKeyboardMarkup(UsersKeyboard, one_time_keyboard=True))

def AddUserHandler(bot,update):
	update.message.reply_text('Bye! I hope we can talk again some day.',reply_markup=ReplyKeyboardRemove())

def RemoveUserHandler(bot,update):
	update.message.reply_text("MOEW")

dispatcher = TGUpdater.dispatcher
dispatcher.add_handler(CommandHandler('start', StartHandler))
dispatcher.add_handler(CommandHandler('sms', SMSHandler))
dispatcher.add_handler(CommandHandler('balance', BalanceHandler))
dispatcher.add_handler(CommandHandler('users', MainUsersHandler))
dispatcher.add_handler(CommandHandler('history', HistroyHandler))
dispatcher.add_handler(RegexHandler('^(–î–∞)$',AcceptHandler))
dispatcher.add_handler(RegexHandler('^(–î–æ–±–∞–≤–ª–µ–Ω–∏–µ)$',AddUserHandler))
dispatcher.add_handler(RegexHandler('^(–£–¥–∞–ª–µ–Ω–∏–µ)$',RemoveUserHandler))
TGUpdater.start_polling()